(self.webpackChunksingularity_web=self.webpackChunksingularity_web||[]).push([[229],{1003:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},metadata:function(){return r},toc:function(){return s},default:function(){return p}});var i=t(2122),a=t(9756),l=(t(7294),t(3905)),o={id:"installation",title:"Installing Singularity"},r={unversionedId:"installation",id:"installation",isDocsHomePage:!1,title:"Installing Singularity",description:"This section will guide you through the process of installing",source:"@site/docs-admin/installation.md",sourceDirName:".",slug:"/installation",permalink:"/docs-admin/installation",editUrl:"https://github.com/hpcng/singularity-web/edit/main/docs-admin/installation.md",version:"current",frontMatter:{id:"installation",title:"Installing Singularity"},sidebar:"someSidebar",previous:{title:"Admin Quick Start",permalink:"/docs-admin/"},next:{title:"Configuration Files",permalink:"/docs-admin/configfiles"}},s=[{value:"Installation on Linux",id:"installation-on-linux",children:[{value:"System Requirements",id:"system-requirements",children:[]},{value:"Before you begin",id:"before-you-begin",children:[]},{value:"Install from Source",id:"install-from-source",children:[]},{value:"Build and install an RPM",id:"build-and-install-an-rpm",children:[]},{value:"Remove an old version",id:"remove-an-old-version",children:[]},{value:"Distribution packages of Singularity",id:"distribution-packages-of-singularity",children:[]},{value:"Testing &amp; Checking the Build Configuration",id:"testing--checking-the-build-configuration",children:[]}]},{value:"Installation on Windows or Mac",id:"installation-on-windows-or-mac",children:[{value:"Windows",id:"windows",children:[]},{value:"Mac",id:"mac",children:[]},{value:"Singularity Vagrant Box",id:"singularity-vagrant-box",children:[]}]}],u={toc:s};function p(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This section will guide you through the process of installing\nSingularity 3.7.0 via several different methods. (For\ninstructions on installing earlier versions of Singularity please see\n",(0,l.kt)("a",{parentName:"p",href:"https://www.sylabs.io/docs/"},"earlier versions of the docs")),(0,l.kt)("h2",{id:"installation-on-linux"},"Installation on Linux"),(0,l.kt)("p",null,"Singularity can be installed on any modern Linux distribution, on\nbare-metal or inside a Virtual Machine. Nested installations inside\ncontainers are not recommended, and require the outer container to be\nrun with full privilege."),(0,l.kt)("h3",{id:"system-requirements"},"System Requirements"),(0,l.kt)("p",null,"Singularity requires ~140MiB disk space once compiled and installed."),(0,l.kt)("p",null,"There are no specific CPU or memory requirements at runtime, though\n2GB of RAM is recommended when building from source."),(0,l.kt)("p",null,"Full functionality of Singularity requires that the kernel supports:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OverlayFS mounts")," - (minimum kernel >=3.18) Required for full\nflexiblity in bind mounts to containers, and to support persistent\noverlays for writable containers."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Unprivileged user namespaces")," - (minimum kernel >=3.8, >=3.18\nrecommended) Required to run containers without root or setuid\nprivilege.")),(0,l.kt)("p",null,"RHEL & CentOS 6 do not support these features, but Singularity can be\nused with some limitations."),(0,l.kt)("h4",{id:"filesystem-support--limitations"},"Filesystem support / limitations"),(0,l.kt)("p",null,"Singularity supports most filesystems, but there are some limitations\nwhen installing Singularity on, or running containers from, common\nparallel / network filesystems. In general:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"We strongly recommend installing Singularity on local disk on each\ncompute node."),(0,l.kt)("li",{parentName:"ul"},"If Singularity is installed to a network location, a\n",(0,l.kt)("inlineCode",{parentName:"li"},"--localstatedir")," should be provided on each node, and Singularity\nconfigured to use it."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"--localstatedir")," filesystem should support overlay mounts."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TMPDIR")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"SINGULARITY_TMPDIR")," should be on a local filesystem\nwherever possible.")),(0,l.kt)("p",null,".. note::"),(0,l.kt)("p",null,"   Set the ",(0,l.kt)("inlineCode",{parentName:"p"},"--localstatedir")," location by by providing\n",(0,l.kt)("inlineCode",{parentName:"p"},"--localstatedir my/dir")," as an option when you configure your\nSingularity build with ",(0,l.kt)("inlineCode",{parentName:"p"},"./mconfig"),"."),(0,l.kt)("p",null,"   Disk usage at the ",(0,l.kt)("inlineCode",{parentName:"p"},"--localstatedir")," location is neglible\n(<1MiB). The directory is used as a location to mount the container\nroot filesystem, overlays, bind mounts etc. that construct the\nruntime view of a container. You will not see these mounts from a\nhost shell, as they are made in a separate mount namespace."),(0,l.kt)("h5",{id:"overlay-support"},"Overlay support"),(0,l.kt)("p",null,"Various features of Singularity, such as the ",(0,l.kt)("inlineCode",{parentName:"p"},"--writable-tmpfs")," and\n",(0,l.kt)("inlineCode",{parentName:"p"},"--overlay"),", options use the Linux ",(0,l.kt)("inlineCode",{parentName:"p"},"overlay")," filesystem driver to\nconstruct a container root filesystem that combines files from\ndifferent locations. Not all filesystems can be used with the\n",(0,l.kt)("inlineCode",{parentName:"p"},"overlay")," driver, so when containers are run from these filesystems\nsome Singularity features may not be available."),(0,l.kt)("p",null,"Overlay support has two aspects:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"lowerdir")," support for a filesystem allows a directory on that\nfilesystem to act as the 'base' of a container. A filesystem must\nsupport overlay ",(0,l.kt)("inlineCode",{parentName:"li"},"lowerdir")," for you be able to run a Singularity\nsandbox container on it, while using functionality such as\n",(0,l.kt)("inlineCode",{parentName:"li"},"--writable-tmpfs")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"--overlay"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"upperdir")," support for a filesystem allows a directory on that\nfilesystem to be merged on top of a ",(0,l.kt)("inlineCode",{parentName:"li"},"lowerdir")," to construct a\ncontainer. If you use the ",(0,l.kt)("inlineCode",{parentName:"li"},"--overlay")," option to overlay a\ndirectory onto a container, then the filesystem holding the\noverlay directory must support ",(0,l.kt)("inlineCode",{parentName:"li"},"upperdir"),".")),(0,l.kt)("p",null,"Note that any overlay limitations mainly apply to sandbox (directory)\ncontainers only. A SIF container is mounted into the\n",(0,l.kt)("inlineCode",{parentName:"p"},"--localstatedir")," location, which should generally be on a local\nfilesystem that supports overlay."),(0,l.kt)("h5",{id:"fakeroot--subuidgid-mapping"},"Fakeroot / (sub)uid/gid mapping"),(0,l.kt)("p",null,"When Singularity is run using the :ref:",(0,l.kt)("inlineCode",{parentName:"p"},"fakeroot <fakeroot>")," option it\ncreates a user namespace for the container, and UIDs / GIDs in that\nuser namepace are mapped to different host UID / GIDs."),(0,l.kt)("p",null,"Most local filesystems (ext4/xfs etc.) support this uid/gid mapping in\na user namespace."),(0,l.kt)("p",null,"Most network filesystems (NFS/Lustre/GPFS etc.) ",(0,l.kt)("em",{parentName:"p"},"do not")," support this\nuid/gid mapping in a user namespace. Because the fileserver is not\naware of the mappings it will deny many operations, with 'permission\ndenied' errors. This is currently a generic problem for rootless\ncontainer runtimes."),(0,l.kt)("h5",{id:"singularity-cache--atomic-rename"},"Singularity cache / atomic rename"),(0,l.kt)("p",null,"Singularity will cache SIF container images generated from remote\nsources, and any OCI/docker layers used to create them. The cache is\ncreated at ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME/.singularity/cache")," by default. The location of\nthe cache can be changed by setting the ",(0,l.kt)("inlineCode",{parentName:"p"},"SINGULARITY_CACHEDIR"),"\nenvironment variable."),(0,l.kt)("p",null,"The directory used for ",(0,l.kt)("inlineCode",{parentName:"p"},"SINGULARITY_CACHEDIR")," should be:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A unique location for each user. Permissions are set on the cache\nso that private images cached for one user are not exposed to\nanother. This means that ",(0,l.kt)("inlineCode",{parentName:"li"},"SINGULARITY_CACHEDIR")," cannot be shared."),(0,l.kt)("li",{parentName:"ul"},"Located on a filesystem with sufficient space for the number and size of\ncontainer images anticipated."),(0,l.kt)("li",{parentName:"ul"},"Located on a filesystem that supports atomic rename, if possible.")),(0,l.kt)("p",null,"In Singularity version 3.6 and above the cache is concurrency safe.\nParallel runs of Singularity that would create overlapping cache\nentries will not conflict, as long as the filesystem used by\n",(0,l.kt)("inlineCode",{parentName:"p"},"SINGULARITY_CACHEDIR")," supports atomic rename operations."),(0,l.kt)("p",null,"Support for atomic rename operations is expected on local POSIX\nfilesystems, but varies for network / parallel filesystems and may be\naffected by topology and configuration. For example, Lustre supports\natomic rename of files only on a single MDT. Rename on NFS is only\natomic to a single client, not across systems accessing the same NFS\nshare."),(0,l.kt)("p",null,"If you are not certain that your ",(0,l.kt)("inlineCode",{parentName:"p"},"$HOME")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"SINGULARITY_CACHEDIR"),"\nfilesytems support atomic rename, do not run Singularity in parallel\nusing remote container URLs. Instead use ",(0,l.kt)("inlineCode",{parentName:"p"},"singularity pull")," to\ncreate a local SIF image, and then run this SIF image in a parallel\nstep. An alternative is to use the ",(0,l.kt)("inlineCode",{parentName:"p"},"--disable-cache")," option, but\nthis will result in each Singularity instance independently fetching\nthe container from the remote source, into a temporary location."),(0,l.kt)("h5",{id:"nfs"},"NFS"),(0,l.kt)("p",null,"NFS filesystems support overlay mounts as a ",(0,l.kt)("inlineCode",{parentName:"p"},"lowerdir")," only, and do not\nsupport user-namespace (sub)uid/gid mapping."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Containers run from SIF files located on an NFS filesystem do not\nhave restrictions."),(0,l.kt)("li",{parentName:"ul"},"You cannot use ",(0,l.kt)("inlineCode",{parentName:"li"},"--overlay mynfsdir/")," to overlay a directory onto\na container when the overlay (upperdir) directory is on an NFS\nfilesystem."),(0,l.kt)("li",{parentName:"ul"},"When using ",(0,l.kt)("inlineCode",{parentName:"li"},"--fakeroot")," to build or run a container, your\n",(0,l.kt)("inlineCode",{parentName:"li"},"TMPDIR")," / ",(0,l.kt)("inlineCode",{parentName:"li"},"SINGULARITY_TMPDIR")," should not be set to an NFS\nlocation."),(0,l.kt)("li",{parentName:"ul"},"You should not run a sandbox container with ",(0,l.kt)("inlineCode",{parentName:"li"},"--fakeroot")," from an\nNFS location.")),(0,l.kt)("h5",{id:"lustre--gpfs"},"Lustre / GPFS"),(0,l.kt)("p",null,"Lustre and GPFS do not have sufficient ",(0,l.kt)("inlineCode",{parentName:"p"},"upperdir")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"lowerdir"),"\noverlay support for certain Singularity features, and do not support\nuser-namespace (sub)uid/gid mapping."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"You cannot use ",(0,l.kt)("inlineCode",{parentName:"li"},"-overlay")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"--writable-tmpfs")," with a sandbox\ncontainer that is located on a Lustre or GPFS filesystem. SIF\ncontainers on Lustre / GPFS will work correctly with these\noptions."),(0,l.kt)("li",{parentName:"ul"},"You cannot use ",(0,l.kt)("inlineCode",{parentName:"li"},"--overlay")," to overlay a directory onto a\ncontainer, when the overlay (upperdir) directory is on a Lustre or\nGPFS filesystem."),(0,l.kt)("li",{parentName:"ul"},"When using ",(0,l.kt)("inlineCode",{parentName:"li"},"--fakeroot")," to build or run a container, your\n",(0,l.kt)("inlineCode",{parentName:"li"},"TMPDIR/SINGULARITY_TMPDIR")," should not be a Lustre or GPFS\nlocation."),(0,l.kt)("li",{parentName:"ul"},"You should not run a sandbox container with ",(0,l.kt)("inlineCode",{parentName:"li"},"--fakeroot")," from a\nLustre or GPFS location.")),(0,l.kt)("h3",{id:"before-you-begin"},"Before you begin"),(0,l.kt)("p",null,"If you have an earlier version of Singularity installed, you should\n:ref:",(0,l.kt)("inlineCode",{parentName:"p"},"remove it <remove-an-old-version>")," before executing the\ninstallation commands.  You will also need to install some\ndependencies and install ",(0,l.kt)("a",{parentName:"p",href:"https://golang.org/"},"Go"),"."),(0,l.kt)("p",null,".. _install-dependencies:"),(0,l.kt)("h3",{id:"install-from-source"},"Install from Source"),(0,l.kt)("p",null,"To use the latest version of Singularity from GitHub you will need to\nbuild and install it from source. This may sound daunting, but the\nprocess is straightforward, and detailed below:"),(0,l.kt)("h4",{id:"install-dependencies"},"Install Dependencies"),(0,l.kt)("p",null,"On Red Hat Enterprise Linux or CentOS install the following dependencies:"),(0,l.kt)("p",null,".. code-block:: sh"),(0,l.kt)("p",null,"   $ sudo yum update -y && \\\nsudo yum groupinstall -y 'Development Tools' && \\\nsudo yum install -y \\\nopenssl-devel \\\nlibuuid-devel \\\nlibseccomp-devel \\\nwget \\\nsquashfs-tools \\\ncryptsetup"),(0,l.kt)("p",null,"On Ubuntu or Debian install the following dependencies:"),(0,l.kt)("p",null,".. code-block:: sh"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ sudo apt-get update && sudo apt-get install -y \\\n    build-essential \\\n    uuid-dev \\\n    libgpgme-dev \\\n    squashfs-tools \\\n    libseccomp-dev \\\n    wget \\\n    pkg-config \\\n    git \\\n    cryptsetup-bin\n")),(0,l.kt)("p",null,".. note::"),(0,l.kt)("p",null,"   You can build Singularity (3.5+) without ",(0,l.kt)("inlineCode",{parentName:"p"},"cryptsetup")," available, but will\nnot be able to use encrypted containers without it installed on your system."),(0,l.kt)("p",null,".. _install-go:"),(0,l.kt)("h4",{id:"install-go"},"Install Go"),(0,l.kt)("p",null,"Singularity v3 is written primarily in Go, and you will need Go 1.13\nor above installed to compile it from source."),(0,l.kt)("p",null,"This is one of several ways to ",(0,l.kt)("a",{parentName:"p",href:"https://golang.org/doc/install"},"install and configure Go"),"."),(0,l.kt)("p",null,".. note::"),(0,l.kt)("p",null,"   If you have previously installed Go from a download, rather than an\noperating system package, you should remove your ",(0,l.kt)("inlineCode",{parentName:"p"},"go")," directory,\ne.g. ",(0,l.kt)("inlineCode",{parentName:"p"},"rm -r /usr/local/go")," before installing a newer\nversion. Extracting a new version of Go over an existing\ninstallation can lead to errors when building Go programs, as it\nmay leave old files, which have been removed or replaced in newer\nversions."),(0,l.kt)("p",null,"Visit the ",(0,l.kt)("a",{parentName:"p",href:"https://golang.org/dl/"},"Go download page")," and pick a package\narchive to download. Copy the link address and download with wget.  Then extract\nthe archive to ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/local")," (or use other instructions on go installation\npage)."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ export VERSION=1.14.12 OS=linux ARCH=amd64 && \\\n    wget https://dl.google.com/go/go$VERSION.$OS-$ARCH.tar.gz && \\\n    sudo tar -C /usr/local -xzvf go$VERSION.$OS-$ARCH.tar.gz && \\\n    rm go$VERSION.$OS-$ARCH.tar.gz\n")),(0,l.kt)("p",null,"Then, set up your environment for Go."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ echo 'export GOPATH=${HOME}/go' >> ~/.bashrc && \\\n    echo 'export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin' >> ~/.bashrc && \\\n    source ~/.bashrc\n")),(0,l.kt)("h4",{id:"download-singularity-from-a-release"},"Download Singularity from a release"),(0,l.kt)("p",null,"You can download Singularity from one of the releases. To see a full\nlist, visit ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/hpcng/singularity/releases"},"the GitHub release page"),".  After deciding on\na release to install, you can run the following commands to proceed\nwith the installation."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ export VERSION={InstallationVersion} && # adjust this as necessary \\\n    wget https://github.com/hpcng/singularity/releases/download/v${VERSION}/singularity-${VERSION}.tar.gz && \\\n    tar -xzf singularity-${VERSION}.tar.gz && \\\n    cd singularity\n")),(0,l.kt)("h4",{id:"checkout-code-from-git"},"Checkout Code from Git"),(0,l.kt)("p",null,"The following commands will install Singularity from the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/hpcng/singularity"},"GitHub repo")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/local"),". This\nmethod will work for >=v{InstallationVersion}. To install an older\ntagged release see ",(0,l.kt)("a",{parentName:"p",href:"https://www.sylabs.io/docs/"},"older versions of the docs"),"."),(0,l.kt)("p",null,"When installing from source, you can decide to install from either a\n",(0,l.kt)("strong",{parentName:"p"},"tag"),", a ",(0,l.kt)("strong",{parentName:"p"},"release branch"),", or from the ",(0,l.kt)("strong",{parentName:"p"},"master branch"),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"tag"),": GitHub tags form the basis for releases, so installing from\na tag is the same as downloading and installing a ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/hpcng/singularity/releases"},"specific release"),".  Tags are\nexpected to be relatively stable and well-tested.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"release branch"),": A release branch represents the latest version\nof a minor release with all the newest bug fixes and enhancements\n(even those that have not yet made it into a point release).  For\ninstance, to install v3.2 with the latest bug fixes and enhancements\ncheckout ",(0,l.kt)("inlineCode",{parentName:"p"},"release-3.2"),".  Release branches may be less stable than\ncode in a tagged point release.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"master branch"),": The ",(0,l.kt)("inlineCode",{parentName:"p"},"master")," branch contains the latest,\nbleeding edge version of Singularity. This is the default branch\nwhen you clone the source code, so you don't have to check out any\nnew branches to install it. The ",(0,l.kt)("inlineCode",{parentName:"p"},"master")," branch changes quickly\nand may be unstable."))),(0,l.kt)("p",null,"To ensure that the Singularity source code is downloaded to the\nappropriate directory use these commands."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ git clone https://github.com/hpcng/singularity.git && \\\n    cd singularity && \\\n    git checkout v{InstallationVersion}\n")),(0,l.kt)("h4",{id:"compile-singularity"},"Compile Singularity"),(0,l.kt)("p",null,"Singularity uses a custom build system called ",(0,l.kt)("inlineCode",{parentName:"p"},"makeit"),".  ",(0,l.kt)("inlineCode",{parentName:"p"},"mconfig"),"\nis called to generate a ",(0,l.kt)("inlineCode",{parentName:"p"},"Makefile")," and then ",(0,l.kt)("inlineCode",{parentName:"p"},"make")," is used to\ncompile and install."),(0,l.kt)("p",null,"To support the SIF image format, automated networking setup etc., and\nolder Linux distributions without user namespace support, Singularity\nmust be ",(0,l.kt)("inlineCode",{parentName:"p"},"make install"),"ed as root or with ",(0,l.kt)("inlineCode",{parentName:"p"},"sudo"),", so it can install\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"libexec/singularity/bin/starter-setuid")," binary with root\nownership and setuid permissions for privileged operations. If you\nneed to install as a normal user, or do not want to use setuid\nfunctionality :ref:",(0,l.kt)("inlineCode",{parentName:"p"},"see below <install-nonsetuid>"),"."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ ./mconfig && \\\n    make -C ./builddir && \\\n    sudo make -C ./builddir install\n")),(0,l.kt)("p",null,"By default Singularity will be installed in the ",(0,l.kt)("inlineCode",{parentName:"p"},"/usr/local"),"\ndirectory hierarchy. You can specify a custom directory with the\n",(0,l.kt)("inlineCode",{parentName:"p"},"--prefix")," option, to ",(0,l.kt)("inlineCode",{parentName:"p"},"mconfig")," like so:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ ./mconfig --prefix=/opt/singularity\n")),(0,l.kt)("p",null,"This option can be useful if you want to install multiple versions of\nSingularity, install a personal version of Singularity on a shared\nsystem, or if you want to remove Singularity easily after installing\nit."),(0,l.kt)("p",null,"For a full list of ",(0,l.kt)("inlineCode",{parentName:"p"},"mconfig")," options, run ",(0,l.kt)("inlineCode",{parentName:"p"},"mconfig --help"),".  Here\nare some of the most common options that you may need to use when\nbuilding Singularity from source."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--sysconfdir"),": Install read-only config files in sysconfdir.\nThis option is important if you need the ",(0,l.kt)("inlineCode",{parentName:"p"},"singularity.conf")," file\nor other configuration files in a custom location.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"--localstatedir"),": Set the state directory where containers are\nmounted. This is a particularly important option for administrators\ninstalling Singularity on a shared file system.  The\n",(0,l.kt)("inlineCode",{parentName:"p"},"--localstatedir")," should be set to a directory that is present on\neach individual node.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"-b"),": Build Singularity in a given directory. By default this is\n",(0,l.kt)("inlineCode",{parentName:"p"},"./builddir"),"."))),(0,l.kt)("p",null,".. _install-nonsetuid:"),(0,l.kt)("h4",{id:"unprivileged-non-setuid-installation"},"Unprivileged (non-setuid) Installation"),(0,l.kt)("p",null,"If you need to install Singularity as a non-root user, or do not wish\nto allow the use of a setuid root binary, you can configure\nsingularity with the ",(0,l.kt)("inlineCode",{parentName:"p"},"--without-suid")," option to mconfig:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ ./mconfig --without-suid --prefix=/home/dave/singularity && \\\n    make -C ./builddir && \\\n    make -C ./builddir install\n")),(0,l.kt)("p",null,"If you have already installed Singularity you can disable the setuid\nflow by setting the option ",(0,l.kt)("inlineCode",{parentName:"p"},"allow setuid = no")," in\n",(0,l.kt)("inlineCode",{parentName:"p"},"etc/singularity/singularity.conf")," within your installation\ndirectory."),(0,l.kt)("p",null,"When singularity does not use setuid all container execution will use\na user namespace. This requires support from your operating system\nkernel, and imposes some limitations on functionality. You should\nreview the ",(0,l.kt)("a",{parentName:"p",href:"userns-requirements"},"requirements")," and\n",(0,l.kt)("a",{parentName:"p",href:"userns-limitations"},"limitations")," in the ",(0,l.kt)("a",{parentName:"p",href:"userns"},"user namespace")," section of this guide."),(0,l.kt)("h4",{id:"source-bash-completion-file"},"Source bash completion file"),(0,l.kt)("p",null,"To enjoy bash shell completion with Singularity commands and options,\nsource the bash completion file:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ . /usr/local/etc/bash_completion.d/singularity\n")),(0,l.kt)("p",null,"Add this command to your ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," file so that bash completion\ncontinues to work in new shells.  (Adjust the path if you\ninstalled Singularity to a different location.)"),(0,l.kt)("p",null,".. _install-rpm:"),(0,l.kt)("h3",{id:"build-and-install-an-rpm"},"Build and install an RPM"),(0,l.kt)("p",null,"If you use RHEL, CentOS or SUSE, building and installing a Singularity\nRPM allows your Singularity installation be more easily managed,\nupgraded and removed. In Singularity >=v3.0.1 you can build an RPM\ndirectly from the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/hpcng/singularity/releases"},"release tarball"),"."),(0,l.kt)("p",null,".. note::"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Be sure to download the correct asset from the [GitHub releases page](https://github.com/hpcng/singularity/releases).  It\nshould be named `singularity-<version>.tar.gz`.\n")),(0,l.kt)("p",null,"After installing the :ref:",(0,l.kt)("inlineCode",{parentName:"p"},"dependencies <install-dependencies>")," and\ninstalling :ref:",(0,l.kt)("inlineCode",{parentName:"p"},"Go <install-go>")," as detailed above, you are ready to\ndownload the tarball and build and install the RPM."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ export VERSION={InstallationVersion} && # adjust this as necessary \\\n    wget https://github.com/hpcng/singularity/releases/download/v${VERSION}/singularity-${VERSION}.tar.gz && \\\n    rpmbuild -tb singularity-${VERSION}.tar.gz && \\\n    sudo rpm -ivh ~/rpmbuild/RPMS/x86_64/singularity-$VERSION-1.el7.x86_64.rpm && \\\n    rm -rf ~/rpmbuild singularity-$VERSION*.tar.gz\n")),(0,l.kt)("p",null,"If you encounter a failed dependency error for golang but installed it\nfrom source, build with this command:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"rpmbuild -tb --nodeps singularity-${VERSION}.tar.gz\n")),(0,l.kt)("p",null,"Options to ",(0,l.kt)("inlineCode",{parentName:"p"},"mconfig")," can be passed using the familiar syntax to\n",(0,l.kt)("inlineCode",{parentName:"p"},"rpmbuild"),".  For example, if you want to force the local state\ndirectory to ",(0,l.kt)("inlineCode",{parentName:"p"},"/mnt")," (instead of the default ",(0,l.kt)("inlineCode",{parentName:"p"},"/var"),") you can do the\nfollowing:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"rpmbuild -tb --define='_localstatedir /mnt' singularity-$VERSION.tar.gz\n")),(0,l.kt)("p",null,".. note::"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," It is very important to set the local state directory to a\n directory that physically exists on nodes within a cluster when\n installing Singularity in an HPC environment with a shared file\n system. \n")),(0,l.kt)("h4",{id:"build-an-rpm-from-git-source"},"Build an RPM from Git source"),(0,l.kt)("p",null,"Alternatively, to build an RPM from a branch of the Git repository you\ncan clone the repository, directly ",(0,l.kt)("inlineCode",{parentName:"p"},"make")," an rpm, and use it to install\nSingularity:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("p",null,"  $ ./mconfig && \\\nmake -C builddir rpm && \\\nsudo rpm -ivh ~/rpmbuild/RPMS/x86_64/singularity-{InstallationVersion}.el7.x86_64.rpm # or whatever version you built"),(0,l.kt)("p",null,"To build an rpm with an alternative install prefix set ",(0,l.kt)("inlineCode",{parentName:"p"},"RPMPREFIX"),"\non the make step, for example:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("p",null,"  $ make -C builddir rpm RPMPREFIX=/usr/local"),(0,l.kt)("p",null,"For finer control of the rpmbuild process you may wish to use ",(0,l.kt)("inlineCode",{parentName:"p"},"make\ndist")," to create a tarball that you can then build into an rpm with\n",(0,l.kt)("inlineCode",{parentName:"p"},"rpmbuild -tb")," as above."),(0,l.kt)("p",null,".. _remove-an-old-version:"),(0,l.kt)("h3",{id:"remove-an-old-version"},"Remove an old version"),(0,l.kt)("p",null,"In a standard installation of Singularity 3.0.1 and beyond (when\nbuilding from source), the command ",(0,l.kt)("inlineCode",{parentName:"p"},"sudo make install")," lists all the\nfiles as they are installed. You must remove all of these files and\ndirectories to completely remove Singularity."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ sudo rm -rf \\\n    /usr/local/libexec/singularity \\\n    /usr/local/var/singularity \\\n    /usr/local/etc/singularity \\\n    /usr/local/bin/singularity \\\n    /usr/local/bin/run-singularity \\\n    /usr/local/etc/bash_completion.d/singularity\n")),(0,l.kt)("p",null,"If you anticipate needing to remove Singularity, it might be easier to\ninstall it in a custom directory using the ",(0,l.kt)("inlineCode",{parentName:"p"},"--prefix")," option to\n",(0,l.kt)("inlineCode",{parentName:"p"},"mconfig"),".  In that case Singularity can be uninstalled simply by\ndeleting the parent directory. Or it may be useful to install\nSingularity :ref:",(0,l.kt)("inlineCode",{parentName:"p"},"using a package manager <install-rpm>")," so that it\ncan be updated and/or uninstalled with ease in the future."),(0,l.kt)("h3",{id:"distribution-packages-of-singularity"},"Distribution packages of Singularity"),(0,l.kt)("p",null,".. note::"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Packaged versions of Singularity in Linux distribution repos are\nmaintained by community members. They may be older releases of\nSingularity, as it can take time to package and distribute new\nversions. For the latest upstream versions of Singularity it is\nrecommended that you build from source using one of the methods\ndetailed above.\n")),(0,l.kt)("h4",{id:"install-the-centosrhel-package-using-yum"},"Install the CentOS/RHEL package using yum"),(0,l.kt)("p",null,"The EPEL (Extra Packages for Enterprise Linux) repos contain\nSingularity rpms that are regularly updated. To install Singularity\nfrom the epel repos, first install the epel-release package and then\ninstall Singularity.  For instance, on CentOS 6/7/8 do the following:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ sudo yum update -y && \\\n    sudo yum install -y epel-release && \\\n    sudo yum update -y && \\\n    sudo yum install -y singularity\n")),(0,l.kt)("h3",{id:"testing--checking-the-build-configuration"},"Testing & Checking the Build Configuration"),(0,l.kt)("p",null,"After installation you can perform a basic test of Singularity\nfunctionality by executing a simple container from the Sylabs Cloud\nlibrary:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ singularity exec library://alpine cat /etc/alpine-release\n3.9.2\n")),(0,l.kt)("p",null,"See the ",(0,l.kt)("inlineCode",{parentName:"p"},"user guide\n<https://www.sylabs.io/guides/\\{userversion\\}/user-guide/>"),"__ for more\ninformation about how to use Singularity."),(0,l.kt)("h4",{id:"singularity-buildcfg"},"singularity buildcfg"),(0,l.kt)("p",null,"Running ",(0,l.kt)("inlineCode",{parentName:"p"},"singularity buildcfg")," will show the build configuration of\nan installed version of Singularity, and lists the paths used by\nSingularity. Use ",(0,l.kt)("inlineCode",{parentName:"p"},"singularity buildcfg")," to confirm paths are set\ncorrectly for your installation, and troubleshoot any 'not-found'\nerrors at runtime."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ singularity buildcfg\nPACKAGE_NAME=singularity\nPACKAGE_VERSION={InstallationVersion}\nBUILDDIR=/home/dtrudg/Sylabs/Git/singularity/builddir\nPREFIX=/usr/local\nEXECPREFIX=/usr/local\nBINDIR=/usr/local/bin\nSBINDIR=/usr/local/sbin\nLIBEXECDIR=/usr/local/libexec\nDATAROOTDIR=/usr/local/share\nDATADIR=/usr/local/share\nSYSCONFDIR=/usr/local/etc\nSHAREDSTATEDIR=/usr/local/com\nLOCALSTATEDIR=/usr/local/var\nRUNSTATEDIR=/usr/local/var/run\nINCLUDEDIR=/usr/local/include\nDOCDIR=/usr/local/share/doc/singularity\nINFODIR=/usr/local/share/info\nLIBDIR=/usr/local/lib\nLOCALEDIR=/usr/local/share/locale\nMANDIR=/usr/local/share/man\nSINGULARITY_CONFDIR=/usr/local/etc/singularity\nSESSIONDIR=/usr/local/var/singularity/mnt/session\n")),(0,l.kt)("p",null,"Note that the ",(0,l.kt)("inlineCode",{parentName:"p"},"LOCALSTATEDIR")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"SESSIONDIR")," should be on local,\nnon-shared storage."),(0,l.kt)("p",null,"The list of files installed by a successful ",(0,l.kt)("inlineCode",{parentName:"p"},"setuid")," installation of\nSingularity can be found in the :ref:",(0,l.kt)("inlineCode",{parentName:"p"},"appendix, installed files\nsection <installed-files>"),"."),(0,l.kt)("h4",{id:"test-suite"},"Test Suite"),(0,l.kt)("p",null,"The Singularity codebase includes a test suite that is run during\ndevelopment using CI services."),(0,l.kt)("p",null,"If you would like to run the test suite locally you can run the test\ntargets from the ",(0,l.kt)("inlineCode",{parentName:"p"},"builddir")," directory in the source tree:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"make check")," runs source code linting and dependency checks"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"make unit-test")," runs basic unit tests"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"make integration-test")," runs integration tests"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"make e2e-test")," runs end-to-end tests, which exercise a large\nnumber of operations by calling the singularity CLI with different\nexecution profiles.")),(0,l.kt)("p",null,".. note::"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Running the full test suite requires a `docker` installation,\nand `nc` in order to test docker and instance/networking\nfunctionality.\n\nSingularity must be installed in order to run the full\ntest suite, as it must run the CLI with setuid privilege for the \n`starter-suid` binary.\n")),(0,l.kt)("p",null,".. warning::"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"`sudo` privilege is required to run the full tests, and you\nshould not run the tests on a production system. We recommend\nrunning the tests in an isolated development or build\nenvironment.\n")),(0,l.kt)("h2",{id:"installation-on-windows-or-mac"},"Installation on Windows or Mac"),(0,l.kt)("p",null,"Linux container runtimes like Singularity cannot run natively on\nWindows or Mac because of basic incompatibilities with the host\nkernel. (Contrary to a popular misconception, MacOS does not run on a\nLinux kernel. It runs on a kernel called Darwin originally forked\nfrom BSD.)"),(0,l.kt)("p",null,"For this reason, the Singularity community maintains a set of Vagrant\nBoxes via ",(0,l.kt)("inlineCode",{parentName:"p"},"Vagrant Cloud <https://www.vagrantup.com/>"),"_",(0,l.kt)("em",{parentName:"p"},", one of\n",(0,l.kt)("inlineCode",{parentName:"em"},"Hashicorp's <https://www.hashicorp.com/#open-source-tools>"))," open\nsource tools. The current versions can be found under the ",(0,l.kt)("inlineCode",{parentName:"p"},"sylabs\n<https://app.vagrantup.com/sylabs>"),"_ organization."),(0,l.kt)("p",null,"Sylabs has also developed a beta version of Singularity Desktop for\nMac, which runs Singularity in a lightweight virtual machine, in a\ntransparent manner."),(0,l.kt)("h3",{id:"windows"},"Windows"),(0,l.kt)("p",null,"Install the following programs:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Git for Windows <https://git-for-windows.github.io/>"),"_"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"VirtualBox for Windows <https://www.virtualbox.org/wiki/Downloads>"),"_"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Vagrant for Windows <https://www.vagrantup.com/downloads.html>"),"_"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Vagrant Manager for Windows <http://vagrantmanager.com/downloads/>"),"_")),(0,l.kt)("h3",{id:"mac"},"Mac"),(0,l.kt)("p",null,"To use Singularity Desktop for macOS (Beta Preview):"),(0,l.kt)("p",null,"Download a Mac installer package ",(0,l.kt)("inlineCode",{parentName:"p"},"here\n<https://www.sylabs.io/singularity-desktop-macos/>"),"__."),(0,l.kt)("p",null,"Singularity is also available via Vagrant (installable with\n",(0,l.kt)("inlineCode",{parentName:"p"},"Homebrew <https://brew.sh>"),"_ or manually) or with the Singularity Desktop for\nmacOS (Alpha Preview)."),(0,l.kt)("p",null,"To use Vagrant via Homebrew:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'$ /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n$ brew install --cask virtualbox && \\\n    brew install --cask vagrant && \\\n    brew install --cask vagrant-manager\n')),(0,l.kt)("h3",{id:"singularity-vagrant-box"},"Singularity Vagrant Box"),(0,l.kt)("p",null,"Run Git Bash (Windows) or open a terminal (Mac) and create and enter a\ndirectory to be used with your Vagrant VM."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ mkdir vm-singularity && \\\n    cd vm-singularity\n")),(0,l.kt)("p",null,"If you have already created and used this folder for another VM, you will need\nto destroy the VM and delete the Vagrantfile."),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ vagrant destroy && \\\n    rm Vagrantfile\n")),(0,l.kt)("p",null,"Then issue the following commands to bring up the Virtual Machine. (Substitute a\ndifferent value for the ",(0,l.kt)("inlineCode",{parentName:"p"},"$VM")," variable if you like.)"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ export VM=sylabs/singularity-3.5-ubuntu-bionic64 && \\\n    vagrant init $VM && \\\n    vagrant up && \\\n    vagrant ssh\n")),(0,l.kt)("p",null,"You can check the installed version of Singularity with the following:"),(0,l.kt)("p",null,".. code-block:: none"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"vagrant@vagrant:~$ singularity version\n{InstallationVersion}\n")),(0,l.kt)("p",null,"Of course, you can also start with a plain OS Vagrant box as a base and then\ninstall Singularity using one of the above methods for Linux."))}p.isMDXComponent=!0}}]);